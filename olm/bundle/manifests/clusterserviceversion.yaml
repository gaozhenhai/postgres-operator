apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
            "apiVersion": "acid.zalan.do/v1",
            "kind": "postgresql",
            "metadata": {
                "name": "postgres"
            },
            "spec": {
                "numberOfInstances": 3,
                "patroni": {
                    "initdb": {
                        "encoding": "UTF8",
                        "locale": "en_US.UTF-8"
                    },
                    "loop_wait": 10,
                    "maximum_lag_on_failover": 33554432,
                    "retry_timeout": 10,
                    "synchronous_mode": true,
                    "ttl": 30
                },
                "postgresql": {
                    "parameters": {
                        "autovacuum_max_workers": "8",
                        "autovacuum_naptime": "8min",
                        "bgwriter_delay": "20ms",
                        "bgwriter_lru_maxpages": "500",
                        "checkpoint_timeout": "10min",
                        "hot_standby_feedback": "on",
                        "log_connections": "off",
                        "log_destination": "csvlog",
                        "log_disconnections": "off",
                        "log_error_verbosity": "verbose",
                        "log_line_prefix": "%m",
                        "log_min_duration_statement": "-1",
                        "log_rotation_age": "1d",
                        "log_statement": "mod",
                        "log_timezone": "PRC",
                        "maintenance_work_mem": "2GB",
                        "max_connections": "1500",
                        "max_logical_replication_workers": "20",
                        "max_parallel_workers_per_gather": "0",
                        "max_replication_slots": "20",
                        "max_standby_archive_delay": "-1",
                        "max_standby_streaming_delay": "180",
                        "max_wal_senders": "20",
                        "max_wal_size": "94MB",
                        "max_worker_processes": "128",
                        "min_wal_size": "32MB",
                        "restart_after_crash": "off",
                        "shared_buffers": "125MB",
                        "superuser_reserved_connections": "10",
                        "tcp_keepalives_count": "10",
                        "tcp_keepalives_idle": "60",
                        "tcp_keepalives_interval": "10",
                        "timezone": "PRC",
                        "track_commit_timestamp": "on",
                        "wal_buffers": "-1",
                        "wal_keep_size": "16000MB",
                        "wal_level": "logical",
                        "wal_receiver_status_interval": "2s",
                        "wal_writer_delay": "10ms",
                        "wal_writer_flush_after": "4MB"
                    },
                    "version": "14"
                },
                "resources": {
                    "limits": {
                        "cpu": "8",
                        "memory": "16Gi"
                    },
                    "requests": {
                        "cpu": "10m",
                        "memory": "500Mi"
                    }
                },
                "volume": {
                    "accessMode": "ReadWriteOnce",
                    "size": "10Gi",
                    "storageClass": "openebs-hostpath"
                }
            }
        }
      ]
    capabilities: Full Lifecycle
    categories: Database
    certified: 'false'
    containerImage: dev-registry.tenxcloud.com/system_containers/postgres-operator:v5.6.0
    createdAt: 2021-06-30 10:30:00
    description: Postgres operator creates and manages PostgreSQL clusters running in Kubernetes.
    repository: https://gitlab.dev.21vianet.com/sbg2-tenxcloud/tms/postgresql-operator.git
    support: tenxcloud
  name: postgres-operator.v1.8.2
  namespace: placeholder
spec:
  customresourcedefinitions:
    owned:
      - description: Creates a PostgreSQL cluster managed by Postgres Operator.
        displayName: PostgreSQL
        kind: postgresql
        name: postgresqls.acid.zalan.do
        version: v1
        resources:
        - kind: StatefulSet
          name: ""
          version: apps/v1
  description: "The Postgres operator manages PostgreSQL clusters on Kubernetes.\n\
    \n### Key principles\n\n* **Hands free:** Configuration happens only via manifests\
    \ and its own config\n* **Cloud native:** Easy integration in automated deploy\
    \ pipelines with no access to Kubernetes directly\n* **Scalable:** Run highly\
    \ available PostgreSQL clusters powered by Patroni\n\n### How it works\n\nThe\
    \ operator watches additions, updates, and deletions of PostgreSQL cluster manifests\
    \ and changes the running clusters accordingly. For each PostgreSQL custom resource\
    \ it creates StatefulSets, Services, and also Postgres roles. For some configuration\
    \ changes, e.g. updating a pod's Docker image, the operator carries out the rolling\
    \ update.\n\n### Creating a Postgres cluster\n\nAfter installing the Postgres\
    \ Operator via OLM you can use the provided YAML examples to create a minimal\
    \ cluster setup with two instances.\n\n```\n# First, make sure the operator is\
    \ running\nkubectl get pod -l name=postgres-operator -n operators\n\n# Then create\
    \ a new Postgres cluster with a manifest file\nkubectl create -n <namespace> -f\
    \ manifests/minimal-postgres-manifest.yaml\n\n# check for deployed clusters\n\
    kubectl get postgresql -n <namespace>\n```\n\nThe StatefulSets, Services and Pods\
    \ will be given the same name as you cluster manifest. The database pods can be\
    \ identified by their number suffix, starting from `-0`. With the default setup\
    \ they run the Spilo container image by Zalando. As for the services and endpoints,\
    \ there will be one for the master pod and another one for all the replicas (`-repl`\
    \ suffix), plus a headless service `-config` for communication with Patroni. Check\
    \ if all components are coming up. Use the label `application=spilo` to filter\
    \ and list the label `spilo-role` to see which Pod currently contains the master.\n\
    \n```\n# check created database pods\nkubectl get pods -l application=spilo -L\
    \ spilo-role\n\n# check created service resources\nkubectl get svc -l application=spilo\n\
    ```\n\n### Configuring the operator\n\nThe operator can be configured by defining\
    \ an `OperatorConfiguration` custom resource or by creating a ConfigMap that contains\
    \ the parameters to be changed. The YAML example shows the default configuration\
    \ used internally when creating the operator via OLM. For a detailed description\
    \ of each parameter checkout out the [operator reference](http://gitlab.tenxcloud.com/middleware-operators/postgresql-operator/blob/tenxcloud-1.5.0/docs/reference/operator_parameters.md)\n\
    \nIn order to obtain changes from the configuration first create an `OperatorConfiguration`\
    \ or ConfigMap. Then edit the Postgres Operator CSV and add a reference to this\
    \ resource in the `spec.containers` section of the `postgres-operator` deployment.\
    \ Then delete the running operator deployment so that the CSV respawns an updated\
    \ deployment.\n\n```\n# for CRD-based configuration\n- env:\n  - name: POSTGRES_OPERATOR_CONFIGURATION_OBJECT\n\
    \    value: postgresql-operator-default-configuration\n\n# for ConfigMap-based\
    \ configuration\n- env:\n  - name: CONFIG_MAP_NAME\n    value: \"postgres-operator\"\
    \n```\n\nPlease, check out the [user guide](http://gitlab.tenxcloud.com/middleware-operators/postgresql-operator/blob/tenxcloud-1.5.0/docs/user.md)\
    \ for more details about how to use the operator.\n"
  displayName: Postgres Operator
  icon:
    - base64data: 
      mediatype: image/png
  install:
    spec:
      deployments:
      - name: postgres-operator
        spec:
          progressDeadlineSeconds: 600
          replicas: 1
          revisionHistoryLimit: 2
          selector:
            matchLabels:
              name: postgres-operator
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 25%
            type: RollingUpdate
          template:
            metadata:
              labels:
                name: postgres-operator
            spec:
              containers:
              - image: dev-registry.tenxcloud.com/system_containers/postgres-operator:v5.6.0
                imagePullPolicy: Always
                name: postgres-operator
                env:
                - name: CONFIG_MAP_NAME
                  value: postgres-operator
                resources:
                  limits:
                    cpu: "1"
                    memory: 1000Mi
                  requests:
                    cpu: 500m
                    memory: 500Mi
              restartPolicy: Always
              serviceAccountName: postgres-operator
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - create
          - patch
          - update
        serviceAccountName: postgres-operator
      permissions:
      - rules:
        - apiGroups:
          - acid.zalan.do
          resources:
          - postgresqls
          - postgresqls/status
          - operatorconfigurations
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - update
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/exec
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - statefulsets
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
        - apiGroups:
          - batch
          resources:
          - cronjobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - delete
          - get
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - get
          - create
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - get
          - create
        - apiGroups:
          - policy
          - extensions
          resourceNames:
          - default
          resources:
          - podsecuritypolicies
          verbs:
          - use
        serviceAccountName: postgres-operator
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
        - apiGroups:
          - policy
          - extensions
          resourceNames:
          - default
          resources:
          - podsecuritypolicies
          verbs:
          - use
        serviceAccountName: postgres-cluster
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
  keywords:
    - postgresql
    - kubernetes
    - database
    - managed-services
    - data-infrastructure
    - cloud-native
    - postgres-operator
  labels:
    name: postgres-operator
  links:
    - name: GitLab
      url: https://gitlab.dev.21vianet.com/sbg2-tenxcloud/tms/postgresql-operator.git
  maintainers:
    - email: tenxcloud@tenxcloud.com
      name: tenxcloud
  maturity: stable
  minKubeVersion: 1.14.0
  provider:
    name: tenxcloud
  selector:
    matchLabels:
      name: postgres-operator
  version: 1.8.2
