apiVersion: v1
kind: Secret
metadata:
  name: postgres.pg
type: Opaque
stringData:
  username: postgres
  password: Passw0rd1
---
apiVersion: v1
kind: Secret
metadata:
  name: replicator.pg
type: Opaque
stringData:
  username: replicator
  password: replicator
---
apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: pg
spec:
  numberOfInstances: 3
  dockerImage: 10.56.184.75:8000/system_containers/spilo-14:2.1-p6
  resources:
    requests:
      cpu: 10m
      memory: 500Mi
    limits:
      cpu: "8"
      memory: 16Gi

  postgresql:
    version: "14"
    parameters:
      max_connections: "1500"
      shared_buffers: "125MB"
      max_wal_size: "94MB"
      min_wal_size: "32MB"
      superuser_reserved_connections: "10"

      tcp_keepalives_idle: "60"
      tcp_keepalives_interval: "10"
      tcp_keepalives_count: "10"

      bgwriter_delay: "20ms"
      bgwriter_lru_maxpages: "500"
      max_worker_processes: "128"
      max_parallel_workers_per_gather: "0"
      maintenance_work_mem: "2GB"

      wal_level: "logical"
      track_commit_timestamp: "on"
      max_wal_senders: "20"
      wal_buffers: "-1"
      wal_writer_delay: "10ms"
      wal_writer_flush_after: "4MB"
      wal_keep_size: "16000MB"
      checkpoint_timeout: "10min"
      max_replication_slots: "20"

      max_standby_archive_delay: "-1"
      max_standby_streaming_delay: "180"
      wal_receiver_status_interval: "2s"
      hot_standby_feedback: "on"
      max_logical_replication_workers: "20"

      timezone: "PRC"
      log_timezone: "PRC"
      log_statement: "mod"
      log_destination: "csvlog"
      log_rotation_age: "1d"
      log_connections: "off"
      log_disconnections: "off"
      log_min_duration_statement: "-1"
      log_error_verbosity: "verbose"
      log_line_prefix: "%m"
      autovacuum_max_workers: "8"
      autovacuum_naptime: "8min"
      restart_after_crash: "off"

  patroni:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    synchronous_mode: true
    maximum_lag_on_failover: 33554432
    initdb:
      encoding: "UTF8"
      locale: "en_US.UTF-8"

  volume:
    size: 20Gi
    storageClass: ssd
    accessMode: ReadWriteOnce

  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"

  sidecars:
  - name: postgres-exporter
    image: 10.56.184.75:8000/system_containers/postgres-exporter:v0.11.1
    env:
    - name: DATA_SOURCE_URI
      value: "$(POD_NAME)/postgres?sslmode=require"
    - name: DATA_SOURCE_USER
      value: "$(POSTGRES_USER)"
    - name: DATA_SOURCE_PASS
      value: "$(POSTGRES_PASSWORD)"
    - name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
      value: "true"
    ports:
    - name: metrics
      containerPort: 9187
      protocol: TCP
    resources:
      limits:
        cpu: 5m
        memory: 100Mi
      requests:
        cpu: 5m
        memory: 100Mi

#  // cluster backup
#  env:
#  - name: BACKUP_SCHEDULE
#    value: "*/8 * * * *"
#  - name: AWS_ENDPOINT
#    value: "http://minio:9000"
#  - name: AWS_ACCESS_KEY_ID
#    value: admin
#  - name: AWS_SECRET_ACCESS_KEY
#    value: "Gd#M^%Qj2a3hK7vd"
#  - name: WALE_S3_PREFIX
#    value: "s3://pgdata/gaozh/backup"
#  - name: AWS_S3_FORCE_PATH_STYLE
#    value: "true"
#  - name: USE_WALG_BACKUP
#    value: "true"
#  - name: BACKUP_NUM_TO_RETAIN
#    value: "1"
#
#  // cluster restore
#  clone:
#    cluster: "pg"
#    # timestamp: "2023-01-03T12:00:00+10:00"
#    s3_wal_path: "s3://pgdata/gaozh/pg"
#    s3_endpoint: "http://minio:9000"
#    s3_access_key_id: "admin"
#    s3_secret_access_key: "Gd#M^%Qj2a3hK7vd"
#    s3_force_path_style: true
#
#  // remote disaster recovery
#  standby:
#    standby_host: "pg.gaozh.svc"
#    standby_port: "5432"
